name: capstone-project
on:
  push:
    branches:
      - 'master'
jobs:
  # build-scan-push:
  #   runs-on: ubuntu-latest
  #   steps: 
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: test-action
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - 
  #       name: Build without push Docker images
  #       uses: docker/build-push-action@v2.7.0
  #       with:
  #         context: .
  #         load: true
  #         tags: capstone-devtools:latest
  #     - 
  #       name: Run Snyk to check Docker image for vulnerabilities
  #       uses: snyk/actions/docker@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         image: capstone-devtools:latest
  #         args: --severity-threshold=high
  #     -
  #       name: Build and push
  #       if: ${{ success() }}
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/capstone-devtools:latest

  check-ip:
    runs-on: ubuntu-latest
    # needs: [build-scan-push]
    steps:
    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Print Public IP
      run: |
        echo ${{ steps.ip.outputs.ipv4 }}
        echo ${{ steps.ip.outputs.ipv6 }}

  ssh:
    runs-on: ubuntu-latest
    needs: [check-ip]
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_KEY }}
        port: ${{ secrets.AWS_SSH_PORT }}
        script: |
          sudo apt-get update -y
          sudo apt-get install -y\
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null        
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo usermod -aG docker $USER
          sudo docker run -d --restart always -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/capstone-devtools:latest